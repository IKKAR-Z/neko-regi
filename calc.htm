<html lang="ja">
	<head>
	<meta charset="utf-8">
	<meta name="viewport"
   		content="width=device-width,
		,user-scalable=no" />
	<style type="text/css">
		<!--
		body{
			user-select: none;
		}
		.srider{
			display: flex;
			justify-content: flex-end;
		}
		h1{
			display: flex;
			justify-content: space-around;
		}
		h1 + a{
			font-size: xx-large;
		}
		content_class{
		}
		
		.tab_class {
			width: calc(100%/3);
			height: 30px;
			background-color: darkgrey;
			line-height: 30px;
			font-size: 15px;
			text-align: center;
			display: block;
			float: left;
			order: -1;
			//タブ部の書式
		}

		input[name="tab_name"] {
			display: none;
			//ラジオボタン◎を非表示にする
		}

		input:checked + .tab_class {
			background-color: cadetblue;
			color: aliceblue;
			//タブが選択された時の書式
		}

		.content_class {
			display: flex;
			flex-flow: column wrap;
			list-style-type: none;
			height: 50rem;
			//display: block;
			//選択されたタブの中身を表示に
		}

		-->
	</style>
	</head>
	<body>
		<hr>
		<h1>
			<input type="button" value="消去" onclick="reset()"><a id="msg">&yen;0</a>
		</h1>
		<hr>
		<div class="tab_area" id="tabs" onchange="tab_button()">
			<input type="radio" name="tab_name" id="tab1" >
			<label class="tab_class" for="tab1">フード</label>
			<input type="radio" name="tab_name" id="tab2" >
			<label class="tab_class" for="tab2">ドリンク</label>
			<input type="radio" name="tab_name" id="tab3" >
			<label class="tab_class" for="tab3">スペシャル</label>
		</div>
		<hr>
		<div class="area1" id="area1">
			<div class="content_class" id="page1">
			</div>
			<div class="content_class" id="page2">
			</div>
			<div class="content_class" id="page3">
				<li>
				<input type="number" id="sp0" value="0">
				<label for="sp0">スペシャル1(価格)</label>
				x 
				<a id="n0">0</a>
				<a class=\"srider\">
					<input type="range" id="quant0" min="0" max="20" value="0" step="1" list="tickmarks">
				</a><br>
				<li>
				<li>
				<input type="number" id="sp1" value="0">
				<label for="sp1">スペシャル2(価格)</label>
				x 
				<a id="n1">0</a>
				<a class=\"srider\">
					<input type="range" id="quant1" min="0" max="20" value="0" step="1" list="tickmarks">
				</a><br>
				<li>
				<li>
				<input type="number" id="sp2" value="0">
				<label for="sp2">スペシャル3(価格)</label>
				x 
				<a id="n2">0</a>
				<a class=\"srider\">
					<input type="range" id="quant2" min="0" max="20" value="0" step="1" list="tickmarks">
				</a><br>
				<li>
			</div>
		</div>
		<datalist id="tickmarks">
			<option value="0"></option>
			<option value="4"></option>
			<option value="8"></option>
			<option value="12"></option>
			<option value="16"></option>
			<option value="20"></option>
		</datalist>
		
		<script>
			let nmax=0;

			let code0="<li><a id=\"food@\"></a><br><a id=\"price@\"></a> x <a id=\"n@\">0</a><br><a class=\"srider\"><input type=\"range\" id=\"quant@\" min=\"0\" max=\"20\" value=\"0\" step=\"1\" list=\"tickmarks\"></a><br></li>\n"

			// CSVファイルを取得
			let csv = new XMLHttpRequest();

			// CSVファイルへのパス
			csv.open("GET", "menu-list.csv", false);

			// csvファイル読み込み失敗時のエラー対応
			try {
				csv.send(null);
			} catch (err) {
				console.log(err);
			}

			// 配列を定義
			let csvArray = [];

			// 改行ごとに配列化
			let lines = csv.responseText.split(/\r\n|\n/);

			// 1行ごとに処理

			for (let i = 0; i < lines.length; ++i) {
				let cells = lines[i].split(",");
				if (cells.length != 1) {
					nmax++;
					let str = code0.split("@");
					if (cells[2]=="food"){
						page1.innerHTML=page1.innerHTML+str.join((i+3));
					}else if(cells[2]=="drink"){
						page2.innerHTML=page2.innerHTML+str.join((i+3));
					}
					eval('food'+(i+3)).innerText=cells[0];
					eval('price'+(i+3)).innerText=cells[1];

				}
			}
			
			area1.onchange = function calc(){
				let a = 0;
				for (var j=0, max=nmax+3; j<max; j++){
					console.log('j:' , j);
					if (j<=3){
						let price = document.getElementById('sp'+j).value;
price=Number(price);
						console.log(typeof(price));
					}else{
						let price = parseInt(document.getElementById('price'+j).innerText,10);
					}
					console.log('price:' , price);
					let quant = parseInt(document.getElementById('quant'+j).value,10);
					console.log('quant:' , quant);
					a = a+price*quant;
				}

				msg.innerText=Intl.NumberFormat('ja-JP', { style: 'currency', currency: 'JPY' }).format(a);
			}
			
			function reset(){
				for (var k=0, max=nmax+3; k<max; k++){
					document.getElementById('quant'+k).value="0";
					eval('n'+k).innerText="0";
				}
				for (var k=0, max=3; k<max; k++){
					document.getElementById('sp'+k).value="0";
				}
				msg.innerText="\\0";
			}
			
			function tab_button(){
				let elements = document.getElementsByName('tab_name');
				let len =elements.length;
				for (let i=0; i<len; i++){
					if (elements.item(i).checked){
						document.getElementById("page"+(i+1)).style.display =  "flex";
					}else{
						document.getElementById("page"+(i+1)).style.display =  "none";
					}
				}
			}
			
			const radio_btn = document.getElementsByName('tab_name');
			radio_btn[0].checked = true;
			tab_button();
			
			for (var i=0, max=nmax+3; i<max; i++){
				let elem = document.getElementById('quant'+i);
				let target = document.getElementById('n'+i);
				let rangeValue = function (elem, target) {
					return function(evt) {
						target.innerHTML = elem.value;
					}
				}
				elem.addEventListener('input', rangeValue(elem,target));
			}
			
		</script>
	</body>
</html>
