<html lang="ja">
	<head>
	<meta charset="utf-8">
	<meta name="viewport"
   		content="width=device-width,
		,user-scalable=no" />
	<style type="text/css">
		<!--
		body{
			user-select: none;
		}
		.upper{
			height : 60px;
			display: grid;
			grid-template-columns: 1fr 8fr 1fr;
			align-items: center;
			justify-items: center;
		}
		.upper > .gr2 {
			display: flex;
			width : 100%;
			height : 100%;
			background-color: rgb(255,255,200);
			font-size: xx-large;
			justify-content: end;
			align-items: center;
		}
		.tab_area{
			display: grid;
			grid-template-columns: 1fr 1fr 1fr 1fr;
			grid-auto-flow: row;
			column-gap: 1px;
		}
		.tab_class {
			background-color: darkgrey;
			line-height: 30px;
			font-size: 15px;
			text-align: center;
			display: block;
			float: left;
			order: -1;
			//タブ部の書式
		}
		input[name="tab_name"] {
			display: none;
			//ラジオボタン◎を非表示にする
		}

		input:checked + .tab_class {
			background-color: cadetblue;
			color: aliceblue;
			//タブが選択された時の書式
		}
		.content_class {
			display: grid;
			grid-template-columns: 1fr 1fr;
			grid-template-rows: 80px 80px 80px 80px 80px 80px 80px 80px 80px;
			grid-auto-flow: row;
			align-items: center;
			justify-items: stretch;			
			column-gap: 20px;
			//選択されたタブの中身を表示に
		}
		.content_class > div {
			display: grid;
			grid-template-rows: 1fr 1fr 1fr;
			align-items: center;
			justify-items: stretch;			
		}
		/*
		.content_class > div > input{
			width: 70%;
			justify-self: end;
		}
		*/
		
		
		input[type="range"]{
			-webkit-appearance: none;
			appearance: none;
			cursor: pointer;
			background: #daffff;
			height: 14px;
			width: 100%;
			border-radius: 10px;
			border: solid 1px #d9d9d9;
			outline: 0;
		}
		input[type="range"]::-moz-range-thumb {
			//-webkit-appearance: none; // デフォルトのつまみのスタイルを解除
			background: #53aeff; // 背景色
			width: 24px; // 幅
			height: 24px; // 高さ
			border-radius: 50%; // 円形に
			box-shadow: 0px 3px 6px 0px rgba(0, 0, 0, 0.15); // 影
		}
		
		
		input[type="number"]{
			width : 80px;
			text-align : end;		
		}
		-->
	</style>
	</head>
	<body>
		<div class="upper">
			<div><input type="button" value="消去" onclick="reset()"></div>
			<div id="msg" class="gr2">&yen;0</div>
		</div>
		<div class="tab_area" id="tabs" onchange="tab_button()">
			<input type="radio" name="tab_name" id="tab1" >
			<label class="tab_class" for="tab1" id="label1">フード</label>
			<input type="radio" name="tab_name" id="tab2" >
			<label class="tab_class" for="tab2" id="label2">ドリンク</label>
			<input type="radio" name="tab_name" id="tab3" >
			<label class="tab_class" for="tab3" id="label3">イベント</label>
			<input type="radio" name="tab_name" id="tab4" >
			<label class="tab_class" for="tab4" id="label4">スペシャル</label>

		</div>
		
		<div class="area1" id="area1">
			<div class="content_class" id="page1">
			</div>
			<div class="content_class" id="page2">
			</div>
			<div class="content_class" id="page3">
			</div>
			<div class="content_class" id="page4">
			</div>
		</div>
		<datalist id="tickmarks">
			<option value="0"></option>
			<option value="4"></option>
			<option value="8"></option>
			<option value="12"></option>
			<option value="16"></option>
			<option value="20"></option>
		</datalist>
		
		<script>
			let nmax=0;
			const sp=3;
			let code0="<div><a id=\"food@1\"></a><div><a id=\"price@1\" class=\"@2\"></a> x <a id=\"n@1\">0</a></div><input type=\"range\" id=\"quant@1\" min=\"0\" max=\"20\" value=\"20\" step=\"1\" list=\"tickmarks\"></div>\n"
			let code1="<div><a>スペシャル@2(価格)</a><div class=\"gr1\"><input type=\"number\" id=\"sp@1\" value=\"0\" class=\"@3\"> x <a id=\"n@1\">0</a></div><input type=\"range\" id=\"quant@1\" min=\"0\" max=\"20\" value=\"20\" step=\"1\" list=\"tickmarks\"></div>\n"
			// CSVファイルを取得
			let csv = new XMLHttpRequest();

			// CSVファイルへのパス
			csv.open("GET", "menu-list.csv", false);

			// csvファイル読み込み失敗時のエラー対応
			try {
				csv.send(null);
			} catch (err) {
				console.log(err);
			}

			// 配列を定義
			let csvArray = [];

			// 改行ごとに配列化
			let lines = csv.responseText.split(/\r\n|\n/);

			// 1行ごとに処理

			for (let i = 0; i < lines.length; ++i) {
				let cells = lines[i].split(",");
				if (cells.length != 1) {
					let str = code0.split("@1");
					if (cells[2]=="food"){
						page1.innerHTML=page1.innerHTML+str.join((nmax+sp)).replace("@2","pg1");
					}else if(cells[2]=="drink"){
						page2.innerHTML=page2.innerHTML+str.join((nmax+sp)).replace("@2","pg2");
					}else if(cells[2]=="event"){
						page3.innerHTML=page3.innerHTML+str.join((nmax+sp)).replace("@2","pg3");
					}else{
						continue;
					}
					//console.log((nmax+sp),':',cells[0]);
					document.getElementById('food'+(nmax+sp)).innerText=cells[0];
					document.getElementById('price'+(nmax+sp)).innerText=cells[1];
					nmax++;	
				}
			}
			
			for (let i=0; i<sp; i++){
				let str = code1.split("@1");
				page4.innerHTML=page4.innerHTML+str.join(i).replace("@2",(i+1)).replace("@3","pg4");
			}
			
			area1.onchange = function calc(){
				let page = [0,0,0,0];
				let a=0;
				let price;
				let pg;
				for (let j=0, max=nmax+sp; j<max; j++){
					//console.log('j:' , j);
					if (j<sp){
						price = parseInt(document.getElementById('sp'+j).value,10);
						pg=document.getElementById('sp'+j).className;
						//console.log(typeof(price));
					}else{
						//console.log('price'+j+':',document.getElementById('price'+j).innerText);
						price = parseInt(document.getElementById('price'+j).innerText,10);
						pg=document.getElementById('price'+j).className;
					}
					let quant = (20-parseInt(document.getElementById('quant'+j).value,10));

					let inner = function (p){
						page[p-1] = page[p-1] + price*quant;
						if(page[p-1]>0){
							document.getElementById('label'+p).style.textDecoration = "underline";
						}else{
							document.getElementById('label'+p).style.textDecoration = "none";
						}
					}
					inner(Number(pg.slice(-1)));
				}
				for (i=0,max=page.length;i<max;i++){
					a=a+page[i];
				}
				msg.innerText=Intl.NumberFormat('ja-JP', { style: 'currency', currency: 'JPY' }).format(a);
			}
			
			function reset(){
				for (let k=0, max=nmax+sp; k<max; k++){
					document.getElementById('quant'+k).value="20";
					document.getElementById('n'+k).innerText="0";
				}
				for (let k=0, max=sp; k<max; k++){
					document.getElementById('sp'+k).value="0";
				}
				for (let k=1, max=4; k<=max; k++){
					document.getElementById('label'+k).style.textDecoration = "none";
				}
				msg.innerText="\\0";
			}
			
			function tab_button(){
				const elements = document.getElementsByName('tab_name');
				const len =elements.length;
				for (let i=0; i<len; i++){
					if (elements.item(i).checked){
						document.getElementById("page"+(i+1)).style.display =  "grid";
					}else{
						document.getElementById("page"+(i+1)).style.display =  "none";
					}
				}
			}
			
			const radio_btn = document.getElementsByName('tab_name');
			radio_btn[0].checked = true;
			tab_button();
			
			for (let i=0, max=nmax+sp; i<max; i++){
				let elem = document.getElementById('quant'+i);
				let target = document.getElementById('n'+i);
				let rangeValue = function (elem, target) {
					return function(evt) {
						target.innerHTML = (20-elem.value);
					}
				}
				//console.log("i:",i);
				elem.addEventListener('input', rangeValue(elem,target));
			}
			
		</script>
	</body>
</html>
